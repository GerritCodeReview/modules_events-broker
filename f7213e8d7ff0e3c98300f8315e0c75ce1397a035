{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4b57e5_e7f40349",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-12T06:48:05Z",
      "side": 1,
      "message": "Does this not leave the library effectively without any tests? I understand that we dont want to provide an actual implementation of a broker, but on the other hand, we need to have quick feedback and some basic level of confidence when we make changes to this project.",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0b09886_07db7a7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-09-12T07:12:10Z",
      "side": 1,
      "message": "I think that if the responsibility of the library is provide a contract. The idea of having an abstract test to be implemented by other libraries is not bad idea. is like plug your implementations and lets see if you follow the specifications.\n\nAnother conversation is that the current libraries i.e events-already have their own tests",
      "parentUuid": "5b4b57e5_e7f40349",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e9609ea_7283a1ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-09-12T07:36:20Z",
      "side": 1,
      "message": "out of curiosity: Is `BrokerApiTest` going to be plugged in as a unit test, it-test? What is your idea?",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dc7d13b_7324a535",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-12T17:56:24Z",
      "side": 1,
      "message": "Ideally it should only test the broker in isolation, but without mocking. It is a \"sort-of\" IT test but without Gerrit, if possible.",
      "parentUuid": "8e9609ea_7283a1ec",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c5ae514_35744da5",
        "filename": "src/test/java/com/gerritforge/gerrit/eventbroker/BrokerApiTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-09-12T07:12:10Z",
      "side": 1,
      "message": "If the idea is to create a test that behaves as a template to enforce concrete implementations to respect the contract defined in the the interface then you should remove Mockito and find another ways to assert behaviours",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44e96770_ef028622",
        "filename": "src/test/java/com/gerritforge/gerrit/eventbroker/BrokerApiTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-09-12T07:25:58Z",
      "side": 1,
      "message": "For example without mocks:\n```\nList\u003cEvent\u003e receivedEvents \u003d new ArrayList\u003c\u003e();\n \nBrokerApi kafkaBrokerApi \u003d kafkaBrokerApi();\nkafkaBrokerApi.send(topic, eventMessage);\nkafkaBrokerApi.receiveAsync(topic, receivedEvents::add);\n\nwaitUntil(() -\u003e receivedEvents.size() \u003d\u003d 1, WAIT_FOR_POLL_TIMEOUT);\nassertThat(receivedEvents.get(0).instanceId).isEqualTo(eventMessage.instanceId);\n```",
      "parentUuid": "0c5ae514_35744da5",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46318752_fb53bd9a",
        "filename": "src/test/java/com/gerritforge/gerrit/eventbroker/BrokerApiTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-09-12T17:56:24Z",
      "side": 1,
      "message": "Yep, exactly.",
      "parentUuid": "44e96770_ef028622",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e06fe42_5f97f5f0",
        "filename": "src/test/java/com/gerritforge/gerrit/eventbroker/BrokerApiTest.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-09-12T19:14:29Z",
      "side": 1,
      "message": "I believe neither this test nor the ExtendedBrokerApi test should be addressed as a part of this epic.\n\nI agree and actually I think it is a brilliant idea to have them, specially for futures implementations of events-broker.\nJust to mention the current implementations already have a solid machinery for testing.",
      "parentUuid": "46318752_fb53bd9a",
      "revId": "f7213e8d7ff0e3c98300f8315e0c75ce1397a035",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}